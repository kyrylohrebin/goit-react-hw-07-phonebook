{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","App.module.css","Redux/selectors.js","Redux/actions.js","Redux/operations.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","Redux/reducers.js","Redux/store.js","index.js","Components/ContactList/ContactList.module.css"],"names":["module","exports","getContacts","state","contacts","items","filteredContacts","normalizedContact","filter","getFilter","toLowerCase","name","includes","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleFormChange","target","value","resetForm","className","styles","form","onSubmit","event","preventDefault","nameNotUnique","nameUnique","nameHandler","find","isContactUnique","contact","id","uuid","alert","post","then","data","catch","error","addContact","input","type","placeholder","onChange","button","ContactItem","onRemove","item","span","onClick","ContactList","useEffect","get","onDeleteContact","delete","deleteContact","length","list","map","Filter","App","container","createReducer","_","payload","loading","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2fcca111.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__mJnbc\",\"input\":\"ContactForm_input__Z8QBF\",\"button\":\"ContactForm_button__29mZL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__38i5T\"};","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const filteredContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedContact = filter.toLowerCase();\n\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedContact),\n  );\n};\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from './actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3000';\r\n\r\nexport const fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nexport const addContact = contact => dispatch => {\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nexport const deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n","import { useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from '../../Redux/selectors';\nimport { addContact } from '../../Redux/operations';\n\nimport styles from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleFormChange = ({ target }) => {\n    const { name, value } = target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const isContactUnique = nameUnique => {\n    const nameHandler = nameUnique.toLowerCase();\n    return contacts.find(({ name }) => name.toLowerCase() === nameHandler);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const nameNotUnique = isContactUnique(name);\n    const contact = { id: uuid(), name, number };\n\n    if (nameNotUnique) {\n      alert(`${name} is already exist`);\n    } else {\n      dispatch(addContact({ name, number }));\n    }\n\n    if (contact === '') {\n      return alert('Enter values');\n    }\n\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <input\n        className={styles.input}\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Enter name\"\n        value={name}\n        onChange={handleFormChange}\n      />\n      <input\n        className={styles.input}\n        type=\"tel\"\n        name=\"number\"\n        placeholder=\"Enter phone number\"\n        value={number}\n        onChange={handleFormChange}\n      />\n      <button className={styles.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import styles from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { deleteContact, fetchContacts } from '../../Redux/operations';\nimport { filteredContacts } from '../../Redux/selectors';\n\nconst ContactItem = ({ id, name, number, onRemove }) => {\n  return (\n    <li className={styles.item}>\n      <span className={styles.span}>{name}:</span>\n      <span className={styles.span}>{number}</span>\n      <button className={styles.button} onClick={() => onRemove(id)}>\n        X\n      </button>\n    </li>\n  );\n};\n\nconst ContactList = () => {\n  const contacts = useSelector(filteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onDeleteContact = id => dispatch(deleteContact(id));\n\n  if (contacts.length === 0) return null;\n  return (\n    <ul className={styles.list}>\n      {contacts.map(contact => (\n        <ContactItem key={contact.id} {...contact} onRemove={onDeleteContact} />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","const Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      value={filter}\r\n      onChange={onChange}\r\n      placeholder=\"Enter name to search\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import ContactForm from './Components/ContactForm/ContactForm';\nimport ContactList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\nimport styles from './App.module.css';\n\nexport default function App() {\n  return (\n    <div className={styles.container}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <h3>Find contacts by name</h3>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from './actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","import contactsReducer from './reducers';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\n\nconst middleware = [...getDefaultMiddleware(), logger];\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './Redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1zmjg\",\"item\":\"ContactList_item__2NhYh\",\"span\":\"ContactList_span__3TZTD\",\"button\":\"ContactList_button__3svZX\"};"],"sourceRoot":""}